<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function ($scope, spUtil, $rootScope, $timeout, csmUnifiedDeviceType) {

	$scope.isMobileView = csmUnifiedDeviceType.isMobileView;
	$scope.maxPopoverCols = 5;

/*			
	// Get list of record watchers
	var record_watchers = [];
	if ($scope.data.menu.items) {
		for(var i in $scope.data.menu.items) {
			var item = $scope.data.menu.items[i];
			if (item.type == 'scripted') {
				if (item.scriptedItems.record_watchers)
					record_watchers = record_watchers.concat(item.scriptedItems.record_watchers);
			}
			if (item.type == 'filtered') {
				record_watchers.push({'table':item.table,'filter':item.filter});
			}
		}
	}

	// Init record watchers
	for (var y in record_watchers){
		var watcher = record_watchers[y];
		spUtil.recordWatch($scope, watcher.table, watcher.filter);
	}
*/	
}]]></client_script>
        <controller_as>c</controller_as>
        <css>.unifiedMenuPrimaryMenuItem {&#13;
  	padding-right: 40px;&#13;
  	color: $navbar-inverse-link-color;&#13;
}&#13;
  &#13;
&#13;
.unifiedMenuPrimaryMenuItem &gt; a {&#13;
	padding-top: 0px;&#13;
  	padding-bottom: 0px;&#13;
}&#13;
&#13;
.unifiedMenuPrimaryMenuText {&#13;
    color: $navbar-inverse-link-color;&#13;
#    color: $csm-navbar-text-color;&#13;
  	font-weight: 400;&#13;
}&#13;
  &#13;
.unifiedMenuPrimaryMenuText:focus, .unifiedMenuPrimaryMenuText:hover {&#13;
    color: $navbar-inverse-link-hover-color;  &#13;
#    color: $csm-navbar-text-color-selected;&#13;
    text-decoration: none;&#13;
}  &#13;
&#13;
.unifiedMenuPrimaryMenuItem:focus, .unifiedMenuPrimaryMenuItem:hover {&#13;
  color: $navbar-inverse-link-hover-color;&#13;
}&#13;
&#13;
.unifiedMenuPrimaryMenuItem .popover.bottom &gt; .arrow:after {&#13;
#	border-bottom-color: $csm-navbar-popover-background-color;&#13;
  	border-bottom-color: $panel-bg;&#13;
}&#13;
&#13;
.unifiedMenuPrimaryMenuItem .popover {&#13;
#  background-color: $csm-navbar-popover-background-color;&#13;
  background-color: $panel-bg;&#13;
  border: none;&#13;
  box-shadow: 0 2px 4px 0 $csm-navbar-popover-box-shadow-color;&#13;
  font-family: inherit;&#13;
  border-radius: 3px;&#13;
  &#13;
   .popoverText {&#13;
#	    color: $csm-navbar-popover-text-color;&#13;
   }&#13;
  &#13;
  .popover-separator-line {&#13;
    border-bottom: 1px solid $text-muted;&#13;
    padding-bottom: 7px;&#13;
    width: 125%&#13;
    margin-bottom: 10px;&#13;
    border-color: #E6E8EA;&#13;
    min-width: 100px;&#13;
  }&#13;
  &#13;
  .popoverHeader h5 {&#13;
	margin-top: 0px;&#13;
    margin-bottom: 0px;&#13;
  }&#13;
  &#13;
  .popoverCsmHeader {&#13;
    color: $text-color;&#13;
#    color: $csm-navbar-popover-separator-text-color;&#13;
  }&#13;
  &#13;
  .popover-content {&#13;
  	padding-left: 30px;&#13;
    padding-top: 20px;&#13;
    padding-bottom: 30px;&#13;
    padding-right: 30px;&#13;
    letter-spacing: 1px;    &#13;
  }&#13;
  &#13;
  .popoverSubItem1 {&#13;
  	padding-top: 13px;&#13;
    white-space: nowrap;&#13;
  }  &#13;
  &#13;
  .popoverSubItem2 {&#13;
    padding-top: 13px;&#13;
  }&#13;
  &#13;
  .popoverItemSeparator {&#13;
     padding-top: 12px;&#13;
     color: $text-muted;&#13;
  }&#13;
  &#13;
  .popoverMenu {&#13;
      .popoverContent {&#13;
          display: table-row;&#13;
      }&#13;
&#13;
      .popoverContentColumn {&#13;
          display: table-cell;&#13;
          padding-right:50px;&#13;
          white-space: nowrap;&#13;
      }&#13;
    &#13;
	  [class~='popoverContentColumn']:last-of-type  {&#13;
          padding-right: 0px;&#13;
      }&#13;
&#13;
      ul {&#13;
          padding-left: 0px;&#13;
      }&#13;
  }&#13;
}&#13;
&#13;
.csm-unified-mobile-menu  .unified-mobile-header-menu-level3-item {  &#13;
  	border-bottom: 0.5px solid #828890;	&#13;
  	border-color: $csm-navbar-panel-separator-color;&#13;
    border-radius: 0px;  	&#13;
}&#13;
&#13;
.unified-mobile-header-menu-level3-item h4 {&#13;
  	padding-left: 20px;&#13;
}&#13;
&#13;
.csm-unified-mobile-menu .panel-body li {&#13;
  	list-style-type: none;&#13;
}&#13;
&#13;
.unified-mobile-header-menu-level3 .panel-heading h4 {&#13;
  	cursor: default;&#13;
}&#13;
&#13;
.unified-mobile-header-menu-level3 .panel .panel-heading,&#13;
.unified-mobile-header-menu-level3-item {&#13;
  	padding-left: 40px;&#13;
}</css>
        <data_table>sp_instance_menu</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list>title</field_list>
        <has_preview>false</has_preview>
        <id/>
        <internal>false</internal>
        <link/>
        <name>Copy of CSM Unified Portal Header Menu W</name>
        <option_schema/>
        <public>true</public>
        <roles/>
        <script><![CDATA[(function(){
	// build menus
	var menu_id = $sp.getValue('sys_id'); // instance sys_id
	data.menu = {};
	data.menu.items = $sp.getMenuItems(menu_id);
	
	var hasSubItems = function (elem, ind, arr) { 
		return elem.items && elem.items.length > 0;
	};
	
	// For an item to be a header, it should 
	// - have subitems and 
	// - should not have a page or url defined (type == "page" or "url" with no href value)
	var isHeaderItem = function(item) {
		if (!item) {
			return false;
		}
		
		return (hasSubItems(item) && 
			    ((item.type === 'page' && item.href === '?id=') || 
			    (item.type === 'url' && item.href === ''))
			   );
	};

	var determineHeaderItems = function(itemsLevel2) {
		if (!itemsLevel2) {
			return;
		}
		
		// Only level2 and level3 items can act as headers
		itemsLevel2.forEach(function(itemLevel2) {
			itemLevel2.isHeader = isHeaderItem(itemLevel2);
			
			var itemsLevel3 = itemLevel2.items;
			if (itemsLevel3) {
				itemsLevel3.forEach(function(itemLevel3) {
					itemLevel3.isHeader = isHeaderItem(itemLevel3);
				});
			}		
		});
	};
		
	for (var i in data.menu.items) {
		var item = data.menu.items[i];
		
		// If level2 does not have subitems, ie there is no level3 & level4
		// then render everything in one column
		item.renderInOneColumn = item.items && !item.items.some(hasSubItems);
		
		determineHeaderItems(item.items);
	}	
	

	
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>juha.kujala@sofigate.com</sys_created_by>
        <sys_created_on>2018-11-24 11:34:52</sys_created_on>
        <sys_id>a5286e18dbca2700b25b4a92ba961942</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Copy of CSM Unified Portal Header Menu W</sys_name>
        <sys_package display_value="Smart traffic" source="x_snc_smart_traffi">c9532e04db4ae300f00ddf8b4b961924</sys_package>
        <sys_policy/>
        <sys_scope display_value="Smart traffic">c9532e04db4ae300f00ddf8b4b961924</sys_scope>
        <sys_update_name>sp_widget_a5286e18dbca2700b25b4a92ba961942</sys_update_name>
        <sys_updated_by>juha.kujala@sofigate.com</sys_updated_by>
        <sys_updated_on>2018-11-24 11:34:52</sys_updated_on>
        <template><![CDATA[<ul class="nav navbar-nav">
  <li ng-if="::!isMobileView()" ng-repeat="item in ::data.menu.items" ng-include="'unifiedMenuTemplate'"></li>
  <div ng-if="::isMobileView()" ng-init="menu=data.menu" ng-include="'unifiedMenuMobileTemplate'"></div>
    <!-- Printing the menu in hidden state for SEO-->
  <li class="hide" ng-repeat="item in ::data.menu.items" ng-include="'unifiedMenuPopoverTemplate'"></li>
</ul>

]]></template>
    </sp_widget>
</record_update>
